(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{327:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("为了后续范例程式在页面呈现上能有比较好看的样式，原先有想过使用 UI 框架或纯写 CSS，但是总觉得好像不够潮，所以呢，我决定带入近年满热门的 CSS 框架 "),t("code",[s._v("Tailwind CSS")]),s._v("，在这系列文章我就不再多花篇幅介绍 Tailwind 的语法及指令等，主要针对 Nuxt 3 如何导入 Tailwind CSS 至项目内使用。")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"tailwind-css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tailwind-css"}},[s._v("#")]),s._v(" Tailwind CSS")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7900637fcad4d129c4b0abe53fdde03~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),s._v("\nTailwind CSS 是近年很热门的 Utility-First CSS 框架，曾掀起一番论战说 Class 不是让你这样用的之类的批评及缺点，但如果你深入了解它后，确实不可否认它能为你带来更好的生产效率等诸多优点。")]),s._v(" "),t("p",[s._v("接下来，我会分别介绍两种导入 Tailwind CSS 方式，分别为 "),t("strong",[s._v("A. Nuxt Community 释出的 Tailwind CSS 整合模块")]),s._v(" 及 "),t("strong",[s._v("B. Tailwind CSS 官方指引步骤")]),s._v("，以下的 "),t("strong",[s._v("A")]),s._v(" 或 "),t("strong",[s._v("B")]),s._v(" 两种导入方式，大家只要"),t("code",[s._v("择一")]),s._v("就可以了。")]),s._v(" "),t("h3",{attrs:{id:"a-使用-nuxt-tailwind-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-使用-nuxt-tailwind-模块"}},[s._v("#")]),s._v(" A. 使用 Nuxt Tailwind 模块")]),s._v(" "),t("h4",{attrs:{id:"step-1-安装相关依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-安装相关依赖"}},[s._v("#")]),s._v(" Step 1. 安装相关依赖")]),s._v(" "),t("p",[s._v("首先安装 "),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm install -D @nuxtjs/tailwindcss\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"step-2-添加模組至-nuxt-config-ts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-添加模組至-nuxt-config-ts"}},[s._v("#")]),s._v(" Step 2. 添加模組至 nuxt.config.ts")]),s._v(" "),t("p",[s._v("打开 "),t("code",[s._v("./nuxt.config.ts")]),s._v(" 将 "),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v(" 模块添加至 "),t("code",[s._v("modules")]),s._v(" 设定参数中，完成后看起来会像下面这样。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// https://v3.nuxtjs.org/api/configuration/nuxt.config\nexport default defineNuxtConfig({\n  modules: ['@nuxtjs/tailwindcss'],\n  typescript: {\n    typeCheck: true\n  }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h4",{attrs:{id:"step-3-重启-nuxt-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-3-重启-nuxt-服务"}},[s._v("#")]),s._v(" Step 3. 重启 Nuxt 服务")]),s._v(" "),t("p",[s._v("重新启动我们的 Nuxt 服务。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm run dev -- -o\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("使用  "),t("strong",[s._v("@nuxtjs/tailwindcss")]),s._v(" 只需要两个步骤就完成了 Tailwind CSS 的配置，这个模快已经包含手动安装时需要建立的 Tailwind CSS 指令 "),t("code",[s._v("tailwindcss.css")]),s._v(" 需要的全局设定与 PostCSS 参数选项，同时也预设了 "),t("code",[s._v("tailwind.config.js")]),s._v(" 的相关 "),t("strong",[s._v("content")]),s._v(" 目录路径，详细可以参考 "),t("a",{attrs:{href:"https://github.com/nuxt-modules/tailwindcss",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nuxt Tailwind"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"扩充或重写-nuxtjs-tailwindcss-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩充或重写-nuxtjs-tailwindcss-配置"}},[s._v("#")]),s._v(" 扩充或重写 "),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v(" 配置")]),s._v(" "),t("blockquote",[t("p",[s._v("如果你没有特别需要扩充或重写设定可以跳过这一段。")])]),s._v(" "),t("p",[s._v("项目内若使用 "),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v(" 模块，这两个 "),t("code",[s._v("tailwind.css")]),s._v(" 与 "),t("code",[s._v("tailwind.config.js")]),s._v(" 文件其实已经有预设，不需要手动建立，"),t("code",[s._v("tailwind.css")]),s._v(" 对应模块内的 "),t("strong",[s._v("tailwind.css")]),s._v(" 可以参考项目文件内容 "),t("a",{attrs:{href:"https://github.com/nuxt-modules/tailwindcss/blob/main/src/runtime/tailwind.css",target:"_blank",rel:"noopener noreferrer"}},[s._v("tailwind.css"),t("OutboundLink")],1),s._v("，"),t("code",[s._v("tailwind.config.js")]),s._v(" 则是通过模块动态新增配置。")]),s._v(" "),t("p",[s._v("倘若想要修改也可以通过创建设置文件来新增或重写预设定，例如在项目下分别建立 "),t("strong",[s._v("tailwind.css")]),s._v(" 与 "),t("strong",[s._v("tailwind.config.js")]),s._v(" 两个文件：")]),s._v(" "),t("h4",{attrs:{id:"tailwind-css-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tailwind-css-2"}},[s._v("#")]),s._v(" tailwind.css")]),s._v(" "),t("p",[s._v("项目目录下若存在路径档名一致的 "),t("code",[s._v("./assets/css/tailwind.css")]),s._v(" 文件， "),t("strong",[s._v("@nuxtjs/tailwindcss")]),s._v(" 就会以这个文件取代模块内"),t("a",{attrs:{href:"https://github.com/nuxt-modules/tailwindcss/blob/main/src/runtime/tailwind.css",target:"_blank",rel:"noopener noreferrer"}},[s._v("预设"),t("OutboundLink")],1),s._v("的 "),t("code",[s._v("tailwind.css")]),s._v(" 文件。")]),s._v(" "),t("p",[t("strong",[s._v("tailwind.css")]),s._v(" 预设内容如下：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("@tailwind base; \n@tailwind components; \n@tailwind utilities;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("如果有成功覆盖配置，在重启 Nuxt 3 服务时，Terminal 会提示下列字串，表示使用了自订的"),t("code",[s._v("tailwind.css")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Using Tailwind CSS from ~/assets/css/tailwind.css\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"tailwind-config-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tailwind-config-js"}},[s._v("#")]),s._v(" tailwind.config.js")]),s._v(" "),t("p",[s._v("项目目录下若存在 "),t("code",[s._v("tailwind.config.js")]),s._v(" 文件就会以新的配置拓展或覆写  "),t("strong",[s._v("@nuxtjs/tailwindcss")]),s._v(" 预设的 "),t("code",[s._v("tailwind.config")]),s._v("。")]),s._v(" "),t("p",[s._v("例如，我们想拓展或覆写 "),t("strong",[s._v("content")]),s._v(" 的配置")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './components/**/*.{vue,js,ts}',\n    './layouts/**/*.vue',\n    './pages/**/*.vue',\n    './composables/**/*.{js,ts}',\n    './plugins/**/*.{js,ts}',\n    './app.{js,ts,vue}'\n  ],\n  theme: {\n    extend: {}\n  },\n  plugins: []\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"b-tailwind-css-官方指引步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-tailwind-css-官方指引步骤"}},[s._v("#")]),s._v(" B. Tailwind CSS 官方指引步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("如果你已经使用了 "),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v(" 进行配置，则可以跳过这一段。")])]),s._v(" "),t("h4",{attrs:{id:"step-1-安装相关依赖-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-安装相关依赖-2"}},[s._v("#")]),s._v(" Step 1. 安装相关依赖")]),s._v(" "),t("p",[s._v("首先进入我们的 Nuxt 项目目录，并安装 Tailwind CSS 会使用到的一些相关依赖。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm install -D tailwindcss postcss@latest postcss-custom-properties@latest autoprefixer@latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"step-2-建立-tailwind-config-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-建立-tailwind-config-js"}},[s._v("#")]),s._v(" Step 2. 建立 tailwind.config.js")]),s._v(" "),t("p",[s._v("安装完依赖后，可以执行下列指令进行初始化，完成后会在项目根目录下产生一个名为 "),t("code",[s._v("tailwind.config.js")]),s._v(" 的 Tailwind CSS 设定档。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npx tailwindcss init\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"step-3-调整-tailwind-config-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-3-调整-tailwind-config-js"}},[s._v("#")]),s._v(" Step 3. 调整 tailwind.config.js")]),s._v(" "),t("p",[s._v("打开刚刚产生的设定档 "),t("code",[s._v("tailwind.config.js")]),s._v("，在配置中的 "),t("code",[s._v("content")]),s._v(" 数组添加一些路径，这些路径皆是跟 Nuxt 有关的资料夹目录与文件，完成后文件内容如下。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './components/**/*.{vue,js,ts}',\n    './layouts/**/*.vue',\n    './pages/**/*.vue',\n    './composables/**/*.{js,ts}',\n    './plugins/**/*.{js,ts}',\n    './app.{js,ts,vue}'\n  ],\n  theme: {\n    extend: {}\n  },\n  plugins: []\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h4",{attrs:{id:"step-4-建立-tailwind-css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-4-建立-tailwind-css"}},[s._v("#")]),s._v(" Step 4. 建立 tailwind.css")]),s._v(" "),t("p",[s._v("接着我们在项目建立目录 "),t("strong",[s._v("assets")]),s._v(" 与子目录 "),t("strong",[s._v("css")]),s._v(" 用来放置 Tailwind CSS 的自定义指令，我们将其放置在 "),t("strong",[s._v("tailwind.css")]),s._v(" 供后续做使用， "),t("strong",[s._v("tailwind.css")]),s._v(" 的路径应会是 "),t("code",[s._v("./assets/css/tailwind.css")]),s._v(" 文件内容如下。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("@tailwind base; \n@tailwind components; \n@tailwind utilities;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"step-5-配置全域共用-css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-5-配置全域共用-css"}},[s._v("#")]),s._v(" Step 5. 配置全域共用 CSS")]),s._v(" "),t("p",[s._v("上面我们建立好 "),t("strong",[s._v("tailwind.css")]),s._v(" 后，为了让每个页面都可以吃得到 Tailwind CSS，我们修改项目根目录的 "),t("code",[s._v("nuxt.config.ts")]),s._v(" 文件，在 "),t("code",[s._v("css")]),s._v(" 参数数组内新增 "),t("code",[s._v("tailwind.css")]),s._v(" 路径，让 Nuxt 可以配置全域共用的 CSS，并添加 "),t("code",[s._v("postcss")]),s._v(" 选项及我们刚才安装的依赖作为插件，最后 "),t("strong",[s._v("nuxt.config.ts")]),s._v(" 文件看起来如下。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// https://v3.nuxtjs.org/api/configuration/nuxt.config\nexport default defineNuxtConfig({\n  postcss: {\n    plugins: {\n      'postcss-import': {},\n      'tailwindcss/nesting': {},\n      tailwindcss: {},\n      autoprefixer: {}\n    }\n  },\n  css: ['@/assets/css/tailwind.css'],\n  typescript: {\n    typeCheck: true\n  }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("至此，我们项目目录文件如下结构。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("nuxt-app\n├── .nuxt/\n├── assets/\n│   └── css/\n│       └── tailwind.css      // 手动新增的文件，用于设置 Tailwind CSS 指令并让全部页面引用\n├── node_modules/\n├── .eslintrc.js\n├── .gitignore\n├── .prettierrc.js\n├── app.vue\n├── nuxt.config.ts\n├── package-lock.json\n├── package.json\n├── README.md\n├── tailwind.config.js       // Tailwind 初始化指令产生的设置\n└── tsconfig.json\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h4",{attrs:{id:"step-6-重启-nuxt-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-6-重启-nuxt-服务"}},[s._v("#")]),s._v(" Step 6. 重启 Nuxt 服务")]),s._v(" "),t("p",[s._v("重新启动我们的 Nuxt 服务。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm run dev -- -o\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"自动排序-tailwind-css-的-class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动排序-tailwind-css-的-class"}},[s._v("#")]),s._v(" 自动排序 Tailwind CSS 的 Class")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a22bd54c698b463ca880ecc89714165c~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),s._v("\n当我们在写 Tailwind CSS 时终究会碰到类型过多，第一眼不确定是否包含某个 class，或者对于顺序上有强烈统一的要求，那么这个 Prettier 的"),t("a",{attrs:{href:"https://github.com/tailwindlabs/prettier-plugin-tailwindcss",target:"_blank",rel:"noopener noreferrer"}},[s._v("插件"),t("OutboundLink")],1),s._v("，"),t("code",[s._v("prettier-plugin-tailwindcss")]),s._v(" 插件是 Tailwind 推出的，目的在于可以使用官方推荐的 class 顺序，来实现"),t("code",[s._v("自动排序 class")]),s._v(" 来做到统一代码风格。")]),s._v(" "),t("h3",{attrs:{id:"tailwind-x-prettier"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tailwind-x-prettier"}},[s._v("#")]),s._v(" Tailwind x Prettier")]),s._v(" "),t("h4",{attrs:{id:"step-1-安装插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-安装插件"}},[s._v("#")]),s._v(" Step 1. 安装插件")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm install -D prettier-plugin-tailwindcss\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("如果你不是照着前面的步骤建置项目，请记得确认已经有安装 prettier 依赖。")])]),s._v(" "),t("h4",{attrs:{id:"step-2-配置设定档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-配置设定档"}},[s._v("#")]),s._v(" Step 2. 配置设定档")]),s._v(" "),t("p",[s._v("开启 "),t("code",[s._v(".prettierrc.js")]),s._v(" 文件，添加 "),t("code",[s._v("'prettier-plugin-tailwindcss'")]),s._v(" 至 "),t("code",[s._v("plugins")]),s._v(" 数组中：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("module.exports = {\n  plugins: [\n    'prettier-plugin-tailwindcss'\n  ],\n  printWidth: 100,          // 每行文字数量达 100 字元就换到新的一行\n  semi: false,              // 每个语句的结尾不需要分号\n  singleQuote: true,        // 字串使用单引号，而不是双引号\n  trailingComma: 'none'     // 如 Object、Array 内的元素不需要尾随逗号\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h4",{attrs:{id:"step-3-自动修正效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-3-自动修正效果"}},[s._v("#")]),s._v(" Step 3. 自动修正效果")]),s._v(" "),t("p",[s._v("你可以在编辑器内移至错误波浪底线使用「快速修复 (Quick Fix)...」功能，或设置 "),t("code",[s._v('"editor.codeActionsOnSave"')]),s._v(" 中 "),t("code",[s._v('"source.fixAll.eslint": true')]),s._v(" 来达到保存后自动修正 prettier 引发的 ESLint 错误。")]),s._v(" "),t("h2",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("相较于 Tailwind CSS 官方指引的安装方式，使用 Nuxt Community 帮我们整理好的 "),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v(" 模块，可以省去繁琐的设定步骤，也解决了一些目前 Nuxt 3 项目中，导入 Tailwind CSS 使用 HMR 可能无法自动编译并重新套用等问题。")]),s._v(" "),t("p",[s._v("后面的系列文章，将会尽量以导入"),t("code",[s._v("@nuxtjs/tailwindcss")]),s._v(" 模块的项目进行开发。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("感谢大家的阅读，也欢迎大家给予建议 ：）")]),s._v(" "),t("p",[s._v("如果对这个 Nuxt 3 系列感兴趣，可以关注一下小编，也欢迎分享给喜欢或正在学习 Nuxt 3 的伙伴。")])])}),[],!1,null,null,null);t.default=e.exports}}]);